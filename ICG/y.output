Terminals unused in grammar

   FUNCTION
   ARRAY
   STRUCT_VAR


State 140 conflicts: 1 reduce/reduce
State 149 conflicts: 2 shift/reduce
State 150 conflicts: 2 shift/reduce
State 151 conflicts: 2 shift/reduce
State 152 conflicts: 2 shift/reduce
State 153 conflicts: 2 shift/reduce
State 154 conflicts: 2 shift/reduce
State 155 conflicts: 2 shift/reduce
State 156 conflicts: 2 shift/reduce
State 157 conflicts: 2 shift/reduce


Grammar

    0 $accept: start $end

    1 start: Function start
    2      | PREPROC start
    3      | Declaration start
    4      | %empty

    5 Function: Type ID '(' ')' CompoundStmt

    6 Type: INT
    7     | FLOAT
    8     | VOID

    9 CompoundStmt: '{' StmtList '}'

   10 StmtList: StmtList stmt
   11         | %empty

   12 stmt: Declaration
   13     | if
   14     | while
   15     | dowhile
   16     | for
   17     | RETURN consttype ';'
   18     | RETURN ';'
   19     | RETURN E ';'
   20     | ';'
   21     | PRINT '(' STRING ')' ';'
   22     | CompoundStmt

   23 $@1: %empty

   24 $@2: %empty

   25 dowhile: DO $@1 CompoundStmt WHILE '(' E ')' $@2 ';'

   26 $@3: %empty

   27 $@4: %empty

   28 $@5: %empty

   29 for: FOR '(' E $@3 ';' E $@4 ';' E $@5 ')' CompoundStmt

   30 $@6: %empty

   31 $@7: %empty

   32 if: IF '(' E ')' $@6 CompoundStmt $@7 else

   33 else: ELSE CompoundStmt
   34     | %empty

   35 $@8: %empty

   36 $@9: %empty

   37 while: WHILE $@8 '(' E ')' $@9 CompoundStmt

   38 assignment: ID '=' consttype
   39           | ID '+' assignment
   40           | ID ',' assignment
   41           | consttype ',' assignment
   42           | ID
   43           | consttype

   44 $@10: %empty

   45 $@11: %empty

   46 $@12: %empty

   47 assignment1: ID $@10 '=' $@11 E $@12
   48            | ID ',' assignment1
   49            | consttype ',' assignment1
   50            | ID
   51            | consttype

   52 consttype: NUM
   53          | REAL

   54 $@13: %empty

   55 $@14: %empty

   56 $@15: %empty

   57 Declaration: Type ID $@13 '=' $@14 E $@15 ';'
   58            | assignment1 ';'
   59            | Type ID '[' assignment ']' ';'
   60            | ID '[' assignment1 ']' ';'
   61            | STRUCT ID '{' Declaration '}' ';'
   62            | STRUCT ID ID ';'
   63            | error

   64 $@16: %empty

   65 array: ID $@16 '[' E ']'

   66 $@17: %empty

   67 E: E '+' $@17 T

   68 $@18: %empty

   69 E: E '-' $@18 T
   70  | T

   71 $@19: %empty

   72 $@20: %empty

   73 E: ID $@19 LE $@20 E

   74 $@21: %empty

   75 $@22: %empty

   76 E: ID $@21 GE $@22 E

   77 $@23: %empty

   78 $@24: %empty

   79 E: ID $@23 EQ $@24 E

   80 $@25: %empty

   81 $@26: %empty

   82 E: ID $@25 NEQ $@26 E

   83 $@27: %empty

   84 $@28: %empty

   85 E: ID $@27 AND $@28 E

   86 $@29: %empty

   87 $@30: %empty

   88 E: ID $@29 OR $@30 E

   89 $@31: %empty

   90 $@32: %empty

   91 E: ID $@31 '<' $@32 E

   92 $@33: %empty

   93 $@34: %empty

   94 E: ID $@33 '>' $@34 E

   95 $@35: %empty

   96 $@36: %empty

   97 E: ID $@35 '=' $@36 E
   98  | array

   99 $@37: %empty

  100 T: T '*' $@37 F

  101 $@38: %empty

  102 T: T '/' $@38 F
  103  | F

  104 F: '(' E ')'

  105 $@39: %empty

  106 F: '-' $@39 F
  107  | ID
  108  | NUM


Terminals, with rules where they appear

$end (0) 0
'(' (40) 5 21 25 29 32 37 104
')' (41) 5 21 25 29 32 37 104
'*' (42) 100
'+' (43) 39 67
',' (44) 40 41 48 49
'-' (45) 69 106
'/' (47) 102
';' (59) 17 18 19 20 21 25 29 57 58 59 60 61 62
'<' (60) 91
'=' (61) 38 47 57 97
'>' (62) 94
'[' (91) 59 60 65
']' (93) 59 60 65
'{' (123) 9 61
'}' (125) 9 61
error (256) 63
INT (258) 6
FLOAT (259) 7
VOID (260) 8
ID (261) 5 38 39 40 42 47 48 50 57 59 60 61 62 65 73 76 79 82 85 88
    91 94 97 107
NUM (262) 52 108
REAL (263) 53
LE (264) 73
GE (265) 76
EQ (266) 79
NEQ (267) 82
AND (268) 85
OR (269) 88
WHILE (270) 25 37
IF (271) 32
RETURN (272) 17 18 19
PREPROC (273) 2
STRING (274) 21
PRINT (275) 21
FUNCTION (276)
DO (277) 25
ARRAY (278)
ELSE (279) 33
STRUCT (280) 61 62
STRUCT_VAR (281)
FOR (282) 29
UMINUS (283)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
start (45)
    on left: 1 2 3 4, on right: 0 1 2 3
Function (46)
    on left: 5, on right: 1
Type (47)
    on left: 6 7 8, on right: 5 57 59
CompoundStmt (48)
    on left: 9, on right: 5 22 25 29 32 33 37
StmtList (49)
    on left: 10 11, on right: 9 10
stmt (50)
    on left: 12 13 14 15 16 17 18 19 20 21 22, on right: 10
dowhile (51)
    on left: 25, on right: 15
$@1 (52)
    on left: 23, on right: 25
$@2 (53)
    on left: 24, on right: 25
for (54)
    on left: 29, on right: 16
$@3 (55)
    on left: 26, on right: 29
$@4 (56)
    on left: 27, on right: 29
$@5 (57)
    on left: 28, on right: 29
if (58)
    on left: 32, on right: 13
$@6 (59)
    on left: 30, on right: 32
$@7 (60)
    on left: 31, on right: 32
else (61)
    on left: 33 34, on right: 32
while (62)
    on left: 37, on right: 14
$@8 (63)
    on left: 35, on right: 37
$@9 (64)
    on left: 36, on right: 37
assignment (65)
    on left: 38 39 40 41 42 43, on right: 39 40 41 59
assignment1 (66)
    on left: 47 48 49 50 51, on right: 48 49 58 60
$@10 (67)
    on left: 44, on right: 47
$@11 (68)
    on left: 45, on right: 47
$@12 (69)
    on left: 46, on right: 47
consttype (70)
    on left: 52 53, on right: 17 38 41 43 49 51
Declaration (71)
    on left: 57 58 59 60 61 62 63, on right: 3 12 61
$@13 (72)
    on left: 54, on right: 57
$@14 (73)
    on left: 55, on right: 57
$@15 (74)
    on left: 56, on right: 57
array (75)
    on left: 65, on right: 98
$@16 (76)
    on left: 64, on right: 65
E (77)
    on left: 67 69 70 73 76 79 82 85 88 91 94 97 98, on right: 19 25
    29 32 37 47 57 65 67 69 73 76 79 82 85 88 91 94 97 104
$@17 (78)
    on left: 66, on right: 67
$@18 (79)
    on left: 68, on right: 69
$@19 (80)
    on left: 71, on right: 73
$@20 (81)
    on left: 72, on right: 73
$@21 (82)
    on left: 74, on right: 76
$@22 (83)
    on left: 75, on right: 76
$@23 (84)
    on left: 77, on right: 79
$@24 (85)
    on left: 78, on right: 79
$@25 (86)
    on left: 80, on right: 82
$@26 (87)
    on left: 81, on right: 82
$@27 (88)
    on left: 83, on right: 85
$@28 (89)
    on left: 84, on right: 85
$@29 (90)
    on left: 86, on right: 88
$@30 (91)
    on left: 87, on right: 88
$@31 (92)
    on left: 89, on right: 91
$@32 (93)
    on left: 90, on right: 91
$@33 (94)
    on left: 92, on right: 94
$@34 (95)
    on left: 93, on right: 94
$@35 (96)
    on left: 95, on right: 97
$@36 (97)
    on left: 96, on right: 97
T (98)
    on left: 100 102 103, on right: 67 69 70 100 102
$@37 (99)
    on left: 99, on right: 100
$@38 (100)
    on left: 101, on right: 102
F (101)
    on left: 104 106 107 108, on right: 100 102 103 106
$@39 (102)
    on left: 105, on right: 106


State 0

    0 $accept: . start $end

    error    shift, and go to state 1
    INT      shift, and go to state 2
    FLOAT    shift, and go to state 3
    VOID     shift, and go to state 4
    ID       shift, and go to state 5
    NUM      shift, and go to state 6
    REAL     shift, and go to state 7
    PREPROC  shift, and go to state 8
    STRUCT   shift, and go to state 9

    $end  reduce using rule 4 (start)

    start        go to state 10
    Function     go to state 11
    Type         go to state 12
    assignment1  go to state 13
    consttype    go to state 14
    Declaration  go to state 15


State 1

   63 Declaration: error .

    $default  reduce using rule 63 (Declaration)


State 2

    6 Type: INT .

    $default  reduce using rule 6 (Type)


State 3

    7 Type: FLOAT .

    $default  reduce using rule 7 (Type)


State 4

    8 Type: VOID .

    $default  reduce using rule 8 (Type)


State 5

   47 assignment1: ID . $@10 '=' $@11 E $@12
   48            | ID . ',' assignment1
   50            | ID .
   60 Declaration: ID . '[' assignment1 ']' ';'

    ','  shift, and go to state 16
    '['  shift, and go to state 17

    ';'       reduce using rule 50 (assignment1)
    $default  reduce using rule 44 ($@10)

    $@10  go to state 18


State 6

   52 consttype: NUM .

    $default  reduce using rule 52 (consttype)


State 7

   53 consttype: REAL .

    $default  reduce using rule 53 (consttype)


State 8

    2 start: PREPROC . start

    error    shift, and go to state 1
    INT      shift, and go to state 2
    FLOAT    shift, and go to state 3
    VOID     shift, and go to state 4
    ID       shift, and go to state 5
    NUM      shift, and go to state 6
    REAL     shift, and go to state 7
    PREPROC  shift, and go to state 8
    STRUCT   shift, and go to state 9

    $end  reduce using rule 4 (start)

    start        go to state 19
    Function     go to state 11
    Type         go to state 12
    assignment1  go to state 13
    consttype    go to state 14
    Declaration  go to state 15


State 9

   61 Declaration: STRUCT . ID '{' Declaration '}' ';'
   62            | STRUCT . ID ID ';'

    ID  shift, and go to state 20


State 10

    0 $accept: start . $end

    $end  shift, and go to state 21


State 11

    1 start: Function . start

    error    shift, and go to state 1
    INT      shift, and go to state 2
    FLOAT    shift, and go to state 3
    VOID     shift, and go to state 4
    ID       shift, and go to state 5
    NUM      shift, and go to state 6
    REAL     shift, and go to state 7
    PREPROC  shift, and go to state 8
    STRUCT   shift, and go to state 9

    $end  reduce using rule 4 (start)

    start        go to state 22
    Function     go to state 11
    Type         go to state 12
    assignment1  go to state 13
    consttype    go to state 14
    Declaration  go to state 15


State 12

    5 Function: Type . ID '(' ')' CompoundStmt
   57 Declaration: Type . ID $@13 '=' $@14 E $@15 ';'
   59            | Type . ID '[' assignment ']' ';'

    ID  shift, and go to state 23


State 13

   58 Declaration: assignment1 . ';'

    ';'  shift, and go to state 24


State 14

   49 assignment1: consttype . ',' assignment1
   51            | consttype .

    ','  shift, and go to state 25

    $default  reduce using rule 51 (assignment1)


State 15

    3 start: Declaration . start

    error    shift, and go to state 1
    INT      shift, and go to state 2
    FLOAT    shift, and go to state 3
    VOID     shift, and go to state 4
    ID       shift, and go to state 5
    NUM      shift, and go to state 6
    REAL     shift, and go to state 7
    PREPROC  shift, and go to state 8
    STRUCT   shift, and go to state 9

    $end  reduce using rule 4 (start)

    start        go to state 26
    Function     go to state 11
    Type         go to state 12
    assignment1  go to state 13
    consttype    go to state 14
    Declaration  go to state 15


State 16

   48 assignment1: ID ',' . assignment1

    ID    shift, and go to state 27
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    assignment1  go to state 28
    consttype    go to state 14


State 17

   60 Declaration: ID '[' . assignment1 ']' ';'

    ID    shift, and go to state 27
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    assignment1  go to state 29
    consttype    go to state 14


State 18

   47 assignment1: ID $@10 . '=' $@11 E $@12

    '='  shift, and go to state 30


State 19

    2 start: PREPROC start .

    $default  reduce using rule 2 (start)


State 20

   61 Declaration: STRUCT ID . '{' Declaration '}' ';'
   62            | STRUCT ID . ID ';'

    ID   shift, and go to state 31
    '{'  shift, and go to state 32


State 21

    0 $accept: start $end .

    $default  accept


State 22

    1 start: Function start .

    $default  reduce using rule 1 (start)


State 23

    5 Function: Type ID . '(' ')' CompoundStmt
   57 Declaration: Type ID . $@13 '=' $@14 E $@15 ';'
   59            | Type ID . '[' assignment ']' ';'

    '('  shift, and go to state 33
    '['  shift, and go to state 34

    $default  reduce using rule 54 ($@13)

    $@13  go to state 35


State 24

   58 Declaration: assignment1 ';' .

    $default  reduce using rule 58 (Declaration)


State 25

   49 assignment1: consttype ',' . assignment1

    ID    shift, and go to state 27
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    assignment1  go to state 36
    consttype    go to state 14


State 26

    3 start: Declaration start .

    $default  reduce using rule 3 (start)


State 27

   47 assignment1: ID . $@10 '=' $@11 E $@12
   48            | ID . ',' assignment1
   50            | ID .

    ','  shift, and go to state 16

    '='       reduce using rule 44 ($@10)
    $default  reduce using rule 50 (assignment1)

    $@10  go to state 18


State 28

   48 assignment1: ID ',' assignment1 .

    $default  reduce using rule 48 (assignment1)


State 29

   60 Declaration: ID '[' assignment1 . ']' ';'

    ']'  shift, and go to state 37


State 30

   47 assignment1: ID $@10 '=' . $@11 E $@12

    $default  reduce using rule 45 ($@11)

    $@11  go to state 38


State 31

   62 Declaration: STRUCT ID ID . ';'

    ';'  shift, and go to state 39


State 32

   61 Declaration: STRUCT ID '{' . Declaration '}' ';'

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4
    ID      shift, and go to state 5
    NUM     shift, and go to state 6
    REAL    shift, and go to state 7
    STRUCT  shift, and go to state 9

    Type         go to state 40
    assignment1  go to state 13
    consttype    go to state 14
    Declaration  go to state 41


State 33

    5 Function: Type ID '(' . ')' CompoundStmt

    ')'  shift, and go to state 42


State 34

   59 Declaration: Type ID '[' . assignment ']' ';'

    ID    shift, and go to state 43
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    assignment  go to state 44
    consttype   go to state 45


State 35

   57 Declaration: Type ID $@13 . '=' $@14 E $@15 ';'

    '='  shift, and go to state 46


State 36

   49 assignment1: consttype ',' assignment1 .

    $default  reduce using rule 49 (assignment1)


State 37

   60 Declaration: ID '[' assignment1 ']' . ';'

    ';'  shift, and go to state 47


State 38

   47 assignment1: ID $@10 '=' $@11 . E $@12

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 53
    T      go to state 54
    F      go to state 55


State 39

   62 Declaration: STRUCT ID ID ';' .

    $default  reduce using rule 62 (Declaration)


State 40

   57 Declaration: Type . ID $@13 '=' $@14 E $@15 ';'
   59            | Type . ID '[' assignment ']' ';'

    ID  shift, and go to state 56


State 41

   61 Declaration: STRUCT ID '{' Declaration . '}' ';'

    '}'  shift, and go to state 57


State 42

    5 Function: Type ID '(' ')' . CompoundStmt

    '{'  shift, and go to state 58

    CompoundStmt  go to state 59


State 43

   38 assignment: ID . '=' consttype
   39           | ID . '+' assignment
   40           | ID . ',' assignment
   42           | ID .

    '='  shift, and go to state 60
    '+'  shift, and go to state 61
    ','  shift, and go to state 62

    $default  reduce using rule 42 (assignment)


State 44

   59 Declaration: Type ID '[' assignment . ']' ';'

    ']'  shift, and go to state 63


State 45

   41 assignment: consttype . ',' assignment
   43           | consttype .

    ','  shift, and go to state 64

    $default  reduce using rule 43 (assignment)


State 46

   57 Declaration: Type ID $@13 '=' . $@14 E $@15 ';'

    $default  reduce using rule 55 ($@14)

    $@14  go to state 65


State 47

   60 Declaration: ID '[' assignment1 ']' ';' .

    $default  reduce using rule 60 (Declaration)


State 48

   65 array: ID . $@16 '[' E ']'
   73 E: ID . $@19 LE $@20 E
   76  | ID . $@21 GE $@22 E
   79  | ID . $@23 EQ $@24 E
   82  | ID . $@25 NEQ $@26 E
   85  | ID . $@27 AND $@28 E
   88  | ID . $@29 OR $@30 E
   91  | ID . $@31 '<' $@32 E
   94  | ID . $@33 '>' $@34 E
   97  | ID . $@35 '=' $@36 E
  107 F: ID .

    LE        reduce using rule 71 ($@19)
    GE        reduce using rule 74 ($@21)
    EQ        reduce using rule 77 ($@23)
    NEQ       reduce using rule 80 ($@25)
    AND       reduce using rule 83 ($@27)
    OR        reduce using rule 86 ($@29)
    '='       reduce using rule 95 ($@35)
    '['       reduce using rule 64 ($@16)
    '<'       reduce using rule 89 ($@31)
    '>'       reduce using rule 92 ($@33)
    $default  reduce using rule 107 (F)

    $@16  go to state 66
    $@19  go to state 67
    $@21  go to state 68
    $@23  go to state 69
    $@25  go to state 70
    $@27  go to state 71
    $@29  go to state 72
    $@31  go to state 73
    $@33  go to state 74
    $@35  go to state 75


State 49

  108 F: NUM .

    $default  reduce using rule 108 (F)


State 50

  106 F: '-' . $@39 F

    $default  reduce using rule 105 ($@39)

    $@39  go to state 76


State 51

  104 F: '(' . E ')'

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 77
    T      go to state 54
    F      go to state 55


State 52

   98 E: array .

    $default  reduce using rule 98 (E)


State 53

   47 assignment1: ID $@10 '=' $@11 E . $@12
   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 46 ($@12)

    $@12  go to state 80


State 54

   70 E: T .
  100 T: T . '*' $@37 F
  102  | T . '/' $@38 F

    '*'  shift, and go to state 81
    '/'  shift, and go to state 82

    $default  reduce using rule 70 (E)


State 55

  103 T: F .

    $default  reduce using rule 103 (T)


State 56

   57 Declaration: Type ID . $@13 '=' $@14 E $@15 ';'
   59            | Type ID . '[' assignment ']' ';'

    '['  shift, and go to state 34

    $default  reduce using rule 54 ($@13)

    $@13  go to state 35


State 57

   61 Declaration: STRUCT ID '{' Declaration '}' . ';'

    ';'  shift, and go to state 83


State 58

    9 CompoundStmt: '{' . StmtList '}'

    $default  reduce using rule 11 (StmtList)

    StmtList  go to state 84


State 59

    5 Function: Type ID '(' ')' CompoundStmt .

    $default  reduce using rule 5 (Function)


State 60

   38 assignment: ID '=' . consttype

    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    consttype  go to state 85


State 61

   39 assignment: ID '+' . assignment

    ID    shift, and go to state 43
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    assignment  go to state 86
    consttype   go to state 45


State 62

   40 assignment: ID ',' . assignment

    ID    shift, and go to state 43
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    assignment  go to state 87
    consttype   go to state 45


State 63

   59 Declaration: Type ID '[' assignment ']' . ';'

    ';'  shift, and go to state 88


State 64

   41 assignment: consttype ',' . assignment

    ID    shift, and go to state 43
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    assignment  go to state 89
    consttype   go to state 45


State 65

   57 Declaration: Type ID $@13 '=' $@14 . E $@15 ';'

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 90
    T      go to state 54
    F      go to state 55


State 66

   65 array: ID $@16 . '[' E ']'

    '['  shift, and go to state 91


State 67

   73 E: ID $@19 . LE $@20 E

    LE  shift, and go to state 92


State 68

   76 E: ID $@21 . GE $@22 E

    GE  shift, and go to state 93


State 69

   79 E: ID $@23 . EQ $@24 E

    EQ  shift, and go to state 94


State 70

   82 E: ID $@25 . NEQ $@26 E

    NEQ  shift, and go to state 95


State 71

   85 E: ID $@27 . AND $@28 E

    AND  shift, and go to state 96


State 72

   88 E: ID $@29 . OR $@30 E

    OR  shift, and go to state 97


State 73

   91 E: ID $@31 . '<' $@32 E

    '<'  shift, and go to state 98


State 74

   94 E: ID $@33 . '>' $@34 E

    '>'  shift, and go to state 99


State 75

   97 E: ID $@35 . '=' $@36 E

    '='  shift, and go to state 100


State 76

  106 F: '-' $@39 . F

    ID   shift, and go to state 101
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    F  go to state 102


State 77

   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T
  104 F: '(' E . ')'

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    ')'  shift, and go to state 103


State 78

   67 E: E '+' . $@17 T

    $default  reduce using rule 66 ($@17)

    $@17  go to state 104


State 79

   69 E: E '-' . $@18 T

    $default  reduce using rule 68 ($@18)

    $@18  go to state 105


State 80

   47 assignment1: ID $@10 '=' $@11 E $@12 .

    $default  reduce using rule 47 (assignment1)


State 81

  100 T: T '*' . $@37 F

    $default  reduce using rule 99 ($@37)

    $@37  go to state 106


State 82

  102 T: T '/' . $@38 F

    $default  reduce using rule 101 ($@38)

    $@38  go to state 107


State 83

   61 Declaration: STRUCT ID '{' Declaration '}' ';' .

    $default  reduce using rule 61 (Declaration)


State 84

    9 CompoundStmt: '{' StmtList . '}'
   10 StmtList: StmtList . stmt

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4
    ID      shift, and go to state 5
    NUM     shift, and go to state 6
    REAL    shift, and go to state 7
    WHILE   shift, and go to state 108
    IF      shift, and go to state 109
    RETURN  shift, and go to state 110
    PRINT   shift, and go to state 111
    DO      shift, and go to state 112
    STRUCT  shift, and go to state 9
    FOR     shift, and go to state 113
    '{'     shift, and go to state 58
    '}'     shift, and go to state 114
    ';'     shift, and go to state 115

    Type          go to state 40
    CompoundStmt  go to state 116
    stmt          go to state 117
    dowhile       go to state 118
    for           go to state 119
    if            go to state 120
    while         go to state 121
    assignment1   go to state 13
    consttype     go to state 14
    Declaration   go to state 122


State 85

   38 assignment: ID '=' consttype .

    $default  reduce using rule 38 (assignment)


State 86

   39 assignment: ID '+' assignment .

    $default  reduce using rule 39 (assignment)


State 87

   40 assignment: ID ',' assignment .

    $default  reduce using rule 40 (assignment)


State 88

   59 Declaration: Type ID '[' assignment ']' ';' .

    $default  reduce using rule 59 (Declaration)


State 89

   41 assignment: consttype ',' assignment .

    $default  reduce using rule 41 (assignment)


State 90

   57 Declaration: Type ID $@13 '=' $@14 E . $@15 ';'
   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 56 ($@15)

    $@15  go to state 123


State 91

   65 array: ID $@16 '[' . E ']'

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 124
    T      go to state 54
    F      go to state 55


State 92

   73 E: ID $@19 LE . $@20 E

    $default  reduce using rule 72 ($@20)

    $@20  go to state 125


State 93

   76 E: ID $@21 GE . $@22 E

    $default  reduce using rule 75 ($@22)

    $@22  go to state 126


State 94

   79 E: ID $@23 EQ . $@24 E

    $default  reduce using rule 78 ($@24)

    $@24  go to state 127


State 95

   82 E: ID $@25 NEQ . $@26 E

    $default  reduce using rule 81 ($@26)

    $@26  go to state 128


State 96

   85 E: ID $@27 AND . $@28 E

    $default  reduce using rule 84 ($@28)

    $@28  go to state 129


State 97

   88 E: ID $@29 OR . $@30 E

    $default  reduce using rule 87 ($@30)

    $@30  go to state 130


State 98

   91 E: ID $@31 '<' . $@32 E

    $default  reduce using rule 90 ($@32)

    $@32  go to state 131


State 99

   94 E: ID $@33 '>' . $@34 E

    $default  reduce using rule 93 ($@34)

    $@34  go to state 132


State 100

   97 E: ID $@35 '=' . $@36 E

    $default  reduce using rule 96 ($@36)

    $@36  go to state 133


State 101

  107 F: ID .

    $default  reduce using rule 107 (F)


State 102

  106 F: '-' $@39 F .

    $default  reduce using rule 106 (F)


State 103

  104 F: '(' E ')' .

    $default  reduce using rule 104 (F)


State 104

   67 E: E '+' $@17 . T

    ID   shift, and go to state 101
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    T  go to state 134
    F  go to state 55


State 105

   69 E: E '-' $@18 . T

    ID   shift, and go to state 101
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    T  go to state 135
    F  go to state 55


State 106

  100 T: T '*' $@37 . F

    ID   shift, and go to state 101
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    F  go to state 136


State 107

  102 T: T '/' $@38 . F

    ID   shift, and go to state 101
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    F  go to state 137


State 108

   37 while: WHILE . $@8 '(' E ')' $@9 CompoundStmt

    $default  reduce using rule 35 ($@8)

    $@8  go to state 138


State 109

   32 if: IF . '(' E ')' $@6 CompoundStmt $@7 else

    '('  shift, and go to state 139


State 110

   17 stmt: RETURN . consttype ';'
   18     | RETURN . ';'
   19     | RETURN . E ';'

    ID    shift, and go to state 48
    NUM   shift, and go to state 140
    REAL  shift, and go to state 7
    '-'   shift, and go to state 50
    '('   shift, and go to state 51
    ';'   shift, and go to state 141

    consttype  go to state 142
    array      go to state 52
    E          go to state 143
    T          go to state 54
    F          go to state 55


State 111

   21 stmt: PRINT . '(' STRING ')' ';'

    '('  shift, and go to state 144


State 112

   25 dowhile: DO . $@1 CompoundStmt WHILE '(' E ')' $@2 ';'

    $default  reduce using rule 23 ($@1)

    $@1  go to state 145


State 113

   29 for: FOR . '(' E $@3 ';' E $@4 ';' E $@5 ')' CompoundStmt

    '('  shift, and go to state 146


State 114

    9 CompoundStmt: '{' StmtList '}' .

    $default  reduce using rule 9 (CompoundStmt)


State 115

   20 stmt: ';' .

    $default  reduce using rule 20 (stmt)


State 116

   22 stmt: CompoundStmt .

    $default  reduce using rule 22 (stmt)


State 117

   10 StmtList: StmtList stmt .

    $default  reduce using rule 10 (StmtList)


State 118

   15 stmt: dowhile .

    $default  reduce using rule 15 (stmt)


State 119

   16 stmt: for .

    $default  reduce using rule 16 (stmt)


State 120

   13 stmt: if .

    $default  reduce using rule 13 (stmt)


State 121

   14 stmt: while .

    $default  reduce using rule 14 (stmt)


State 122

   12 stmt: Declaration .

    $default  reduce using rule 12 (stmt)


State 123

   57 Declaration: Type ID $@13 '=' $@14 E $@15 . ';'

    ';'  shift, and go to state 147


State 124

   65 array: ID $@16 '[' E . ']'
   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    ']'  shift, and go to state 148


State 125

   73 E: ID $@19 LE $@20 . E

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 149
    T      go to state 54
    F      go to state 55


State 126

   76 E: ID $@21 GE $@22 . E

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 150
    T      go to state 54
    F      go to state 55


State 127

   79 E: ID $@23 EQ $@24 . E

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 151
    T      go to state 54
    F      go to state 55


State 128

   82 E: ID $@25 NEQ $@26 . E

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 152
    T      go to state 54
    F      go to state 55


State 129

   85 E: ID $@27 AND $@28 . E

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 153
    T      go to state 54
    F      go to state 55


State 130

   88 E: ID $@29 OR $@30 . E

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 154
    T      go to state 54
    F      go to state 55


State 131

   91 E: ID $@31 '<' $@32 . E

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 155
    T      go to state 54
    F      go to state 55


State 132

   94 E: ID $@33 '>' $@34 . E

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 156
    T      go to state 54
    F      go to state 55


State 133

   97 E: ID $@35 '=' $@36 . E

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 157
    T      go to state 54
    F      go to state 55


State 134

   67 E: E '+' $@17 T .
  100 T: T . '*' $@37 F
  102  | T . '/' $@38 F

    '*'  shift, and go to state 81
    '/'  shift, and go to state 82

    $default  reduce using rule 67 (E)


State 135

   69 E: E '-' $@18 T .
  100 T: T . '*' $@37 F
  102  | T . '/' $@38 F

    '*'  shift, and go to state 81
    '/'  shift, and go to state 82

    $default  reduce using rule 69 (E)


State 136

  100 T: T '*' $@37 F .

    $default  reduce using rule 100 (T)


State 137

  102 T: T '/' $@38 F .

    $default  reduce using rule 102 (T)


State 138

   37 while: WHILE $@8 . '(' E ')' $@9 CompoundStmt

    '('  shift, and go to state 158


State 139

   32 if: IF '(' . E ')' $@6 CompoundStmt $@7 else

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 159
    T      go to state 54
    F      go to state 55


State 140

   52 consttype: NUM .
  108 F: NUM .

    ';'       reduce using rule 52 (consttype)
    ';'       [reduce using rule 108 (F)]
    $default  reduce using rule 108 (F)


State 141

   18 stmt: RETURN ';' .

    $default  reduce using rule 18 (stmt)


State 142

   17 stmt: RETURN consttype . ';'

    ';'  shift, and go to state 160


State 143

   19 stmt: RETURN E . ';'
   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    ';'  shift, and go to state 161


State 144

   21 stmt: PRINT '(' . STRING ')' ';'

    STRING  shift, and go to state 162


State 145

   25 dowhile: DO $@1 . CompoundStmt WHILE '(' E ')' $@2 ';'

    '{'  shift, and go to state 58

    CompoundStmt  go to state 163


State 146

   29 for: FOR '(' . E $@3 ';' E $@4 ';' E $@5 ')' CompoundStmt

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 164
    T      go to state 54
    F      go to state 55


State 147

   57 Declaration: Type ID $@13 '=' $@14 E $@15 ';' .

    $default  reduce using rule 57 (Declaration)


State 148

   65 array: ID $@16 '[' E ']' .

    $default  reduce using rule 65 (array)


State 149

   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T
   73  | ID $@19 LE $@20 E .

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    '+'       [reduce using rule 73 (E)]
    '-'       [reduce using rule 73 (E)]
    $default  reduce using rule 73 (E)


State 150

   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T
   76  | ID $@21 GE $@22 E .

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    '+'       [reduce using rule 76 (E)]
    '-'       [reduce using rule 76 (E)]
    $default  reduce using rule 76 (E)


State 151

   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T
   79  | ID $@23 EQ $@24 E .

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    '+'       [reduce using rule 79 (E)]
    '-'       [reduce using rule 79 (E)]
    $default  reduce using rule 79 (E)


State 152

   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T
   82  | ID $@25 NEQ $@26 E .

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    '+'       [reduce using rule 82 (E)]
    '-'       [reduce using rule 82 (E)]
    $default  reduce using rule 82 (E)


State 153

   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T
   85  | ID $@27 AND $@28 E .

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    '+'       [reduce using rule 85 (E)]
    '-'       [reduce using rule 85 (E)]
    $default  reduce using rule 85 (E)


State 154

   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T
   88  | ID $@29 OR $@30 E .

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    '+'       [reduce using rule 88 (E)]
    '-'       [reduce using rule 88 (E)]
    $default  reduce using rule 88 (E)


State 155

   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T
   91  | ID $@31 '<' $@32 E .

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    '+'       [reduce using rule 91 (E)]
    '-'       [reduce using rule 91 (E)]
    $default  reduce using rule 91 (E)


State 156

   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T
   94  | ID $@33 '>' $@34 E .

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    '+'       [reduce using rule 94 (E)]
    '-'       [reduce using rule 94 (E)]
    $default  reduce using rule 94 (E)


State 157

   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T
   97  | ID $@35 '=' $@36 E .

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    '+'       [reduce using rule 97 (E)]
    '-'       [reduce using rule 97 (E)]
    $default  reduce using rule 97 (E)


State 158

   37 while: WHILE $@8 '(' . E ')' $@9 CompoundStmt

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 165
    T      go to state 54
    F      go to state 55


State 159

   32 if: IF '(' E . ')' $@6 CompoundStmt $@7 else
   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    ')'  shift, and go to state 166


State 160

   17 stmt: RETURN consttype ';' .

    $default  reduce using rule 17 (stmt)


State 161

   19 stmt: RETURN E ';' .

    $default  reduce using rule 19 (stmt)


State 162

   21 stmt: PRINT '(' STRING . ')' ';'

    ')'  shift, and go to state 167


State 163

   25 dowhile: DO $@1 CompoundStmt . WHILE '(' E ')' $@2 ';'

    WHILE  shift, and go to state 168


State 164

   29 for: FOR '(' E . $@3 ';' E $@4 ';' E $@5 ')' CompoundStmt
   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 26 ($@3)

    $@3  go to state 169


State 165

   37 while: WHILE $@8 '(' E . ')' $@9 CompoundStmt
   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    ')'  shift, and go to state 170


State 166

   32 if: IF '(' E ')' . $@6 CompoundStmt $@7 else

    $default  reduce using rule 30 ($@6)

    $@6  go to state 171


State 167

   21 stmt: PRINT '(' STRING ')' . ';'

    ';'  shift, and go to state 172


State 168

   25 dowhile: DO $@1 CompoundStmt WHILE . '(' E ')' $@2 ';'

    '('  shift, and go to state 173


State 169

   29 for: FOR '(' E $@3 . ';' E $@4 ';' E $@5 ')' CompoundStmt

    ';'  shift, and go to state 174


State 170

   37 while: WHILE $@8 '(' E ')' . $@9 CompoundStmt

    $default  reduce using rule 36 ($@9)

    $@9  go to state 175


State 171

   32 if: IF '(' E ')' $@6 . CompoundStmt $@7 else

    '{'  shift, and go to state 58

    CompoundStmt  go to state 176


State 172

   21 stmt: PRINT '(' STRING ')' ';' .

    $default  reduce using rule 21 (stmt)


State 173

   25 dowhile: DO $@1 CompoundStmt WHILE '(' . E ')' $@2 ';'

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 177
    T      go to state 54
    F      go to state 55


State 174

   29 for: FOR '(' E $@3 ';' . E $@4 ';' E $@5 ')' CompoundStmt

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 178
    T      go to state 54
    F      go to state 55


State 175

   37 while: WHILE $@8 '(' E ')' $@9 . CompoundStmt

    '{'  shift, and go to state 58

    CompoundStmt  go to state 179


State 176

   32 if: IF '(' E ')' $@6 CompoundStmt . $@7 else

    $default  reduce using rule 31 ($@7)

    $@7  go to state 180


State 177

   25 dowhile: DO $@1 CompoundStmt WHILE '(' E . ')' $@2 ';'
   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    ')'  shift, and go to state 181


State 178

   29 for: FOR '(' E $@3 ';' E . $@4 ';' E $@5 ')' CompoundStmt
   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 27 ($@4)

    $@4  go to state 182


State 179

   37 while: WHILE $@8 '(' E ')' $@9 CompoundStmt .

    $default  reduce using rule 37 (while)


State 180

   32 if: IF '(' E ')' $@6 CompoundStmt $@7 . else

    ELSE  shift, and go to state 183

    $default  reduce using rule 34 (else)

    else  go to state 184


State 181

   25 dowhile: DO $@1 CompoundStmt WHILE '(' E ')' . $@2 ';'

    $default  reduce using rule 24 ($@2)

    $@2  go to state 185


State 182

   29 for: FOR '(' E $@3 ';' E $@4 . ';' E $@5 ')' CompoundStmt

    ';'  shift, and go to state 186


State 183

   33 else: ELSE . CompoundStmt

    '{'  shift, and go to state 58

    CompoundStmt  go to state 187


State 184

   32 if: IF '(' E ')' $@6 CompoundStmt $@7 else .

    $default  reduce using rule 32 (if)


State 185

   25 dowhile: DO $@1 CompoundStmt WHILE '(' E ')' $@2 . ';'

    ';'  shift, and go to state 188


State 186

   29 for: FOR '(' E $@3 ';' E $@4 ';' . E $@5 ')' CompoundStmt

    ID   shift, and go to state 48
    NUM  shift, and go to state 49
    '-'  shift, and go to state 50
    '('  shift, and go to state 51

    array  go to state 52
    E      go to state 189
    T      go to state 54
    F      go to state 55


State 187

   33 else: ELSE CompoundStmt .

    $default  reduce using rule 33 (else)


State 188

   25 dowhile: DO $@1 CompoundStmt WHILE '(' E ')' $@2 ';' .

    $default  reduce using rule 25 (dowhile)


State 189

   29 for: FOR '(' E $@3 ';' E $@4 ';' E . $@5 ')' CompoundStmt
   67 E: E . '+' $@17 T
   69  | E . '-' $@18 T

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 28 ($@5)

    $@5  go to state 190


State 190

   29 for: FOR '(' E $@3 ';' E $@4 ';' E $@5 . ')' CompoundStmt

    ')'  shift, and go to state 191


State 191

   29 for: FOR '(' E $@3 ';' E $@4 ';' E $@5 ')' . CompoundStmt

    '{'  shift, and go to state 58

    CompoundStmt  go to state 192


State 192

   29 for: FOR '(' E $@3 ';' E $@4 ';' E $@5 ')' CompoundStmt .

    $default  reduce using rule 29 (for)
